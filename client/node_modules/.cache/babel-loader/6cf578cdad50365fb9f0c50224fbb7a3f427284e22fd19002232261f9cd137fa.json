{"ast":null,"code":"import React,{useEffect,useState}from\"react\";import{useSelector,useDispatch}from\"react-redux\";import{setLoggedIn}from\"../store/reducers/auth-slice\";import{Navigate,useLocation,useNavigate}from\"react-router-dom\";import PageLayout from\"./PageLayout\";import{decodeToken}from\"react-jwt\";import{jsx as _jsx}from\"react/jsx-runtime\";var AuthGuard=function AuthGuard(){var dispatch=useDispatch();var navigate=useNavigate();var isLoggedIn=useSelector(function(state){return state.auth.isLoggedIn;});var _useLocation=useLocation(),locationState=_useLocation.state,pathname=_useLocation.pathname;// Checking token and determininf the user route accordingly \nuseEffect(function(){var token=localStorage.getItem(\"token\");if(token){var user=decodeToken(token);if(user){dispatch(setLoggedIn(true));console.log(\"loggeding\");}}else if(!token){dispatch(setLoggedIn(false));}},[]);useEffect(function(){if(isLoggedIn){navigate(pathname);}else{navigate('/login');}},[isLoggedIn]);if(!isLoggedIn){return/*#__PURE__*/_jsx(Navigate,{to:\"/login\",state:{visitedLocation:locationState}});}return/*#__PURE__*/_jsx(PageLayout,{});};export default AuthGuard;","map":{"version":3,"names":["React","useEffect","useState","useSelector","useDispatch","setLoggedIn","Navigate","useLocation","useNavigate","PageLayout","decodeToken","jsx","_jsx","AuthGuard","dispatch","navigate","isLoggedIn","state","auth","_useLocation","locationState","pathname","token","localStorage","getItem","user","console","log","to","visitedLocation"],"sources":["C:/Users/User/Desktop/Book Land/client/src/layouts/AuthGuard.jsx"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\n\nimport { setLoggedIn } from \"../store/reducers/auth-slice\";\nimport { Navigate, useLocation, useNavigate } from \"react-router-dom\";\nimport PageLayout from \"./PageLayout\";\nimport { decodeToken } from \"react-jwt\";\n\nconst AuthGuard = () => {\n  const dispatch = useDispatch();\n  const navigate = useNavigate()\n  const isLoggedIn = useSelector((state) => state.auth.isLoggedIn);\n  const { state: locationState, pathname } = useLocation();\n\n\n  // Checking token and determininf the user route accordingly \n\n  useEffect(() => {\n    const token = localStorage.getItem(\"token\");\n    if (token) {\n      const user = decodeToken(token);\n      if (user) {\n        dispatch(setLoggedIn(true));\n        console.log(\"loggeding\");\n      }\n    }else if(!token){\n      dispatch(setLoggedIn(false))\n    }\n  }, []);\n\n  useEffect(() => {\n      if(isLoggedIn){\n        navigate(pathname)\n      }else{\n        navigate('/login')\n      }\n  }, [isLoggedIn]);\n\n  if (!isLoggedIn) {\n    return <Navigate to=\"/login\" state={{ visitedLocation: locationState }} />;\n  }\n\n  return <PageLayout />;\n};\n\nexport default AuthGuard;\n"],"mappings":"AAAA,MAAO,CAAAA,KAAK,EAAIC,SAAS,CAAEC,QAAQ,KAAQ,OAAO,CAClD,OAASC,WAAW,CAAEC,WAAW,KAAQ,aAAa,CAEtD,OAASC,WAAW,KAAQ,8BAA8B,CAC1D,OAASC,QAAQ,CAAEC,WAAW,CAAEC,WAAW,KAAQ,kBAAkB,CACrE,MAAO,CAAAC,UAAU,KAAM,cAAc,CACrC,OAASC,WAAW,KAAQ,WAAW,CAAC,OAAAC,GAAA,IAAAC,IAAA,yBAExC,GAAM,CAAAC,SAAS,CAAG,QAAZ,CAAAA,SAASA,CAAA,CAAS,CACtB,GAAM,CAAAC,QAAQ,CAAGV,WAAW,EAAE,CAC9B,GAAM,CAAAW,QAAQ,CAAGP,WAAW,EAAE,CAC9B,GAAM,CAAAQ,UAAU,CAAGb,WAAW,CAAC,SAACc,KAAK,QAAK,CAAAA,KAAK,CAACC,IAAI,CAACF,UAAU,GAAC,CAChE,IAAAG,YAAA,CAA2CZ,WAAW,EAAE,CAAzCa,aAAa,CAAAD,YAAA,CAApBF,KAAK,CAAiBI,QAAQ,CAAAF,YAAA,CAARE,QAAQ,CAGtC;AAEApB,SAAS,CAAC,UAAM,CACd,GAAM,CAAAqB,KAAK,CAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC,CAC3C,GAAIF,KAAK,CAAE,CACT,GAAM,CAAAG,IAAI,CAAGf,WAAW,CAACY,KAAK,CAAC,CAC/B,GAAIG,IAAI,CAAE,CACRX,QAAQ,CAACT,WAAW,CAAC,IAAI,CAAC,CAAC,CAC3BqB,OAAO,CAACC,GAAG,CAAC,WAAW,CAAC,CAC1B,CACF,CAAC,IAAK,IAAG,CAACL,KAAK,CAAC,CACdR,QAAQ,CAACT,WAAW,CAAC,KAAK,CAAC,CAAC,CAC9B,CACF,CAAC,CAAE,EAAE,CAAC,CAENJ,SAAS,CAAC,UAAM,CACZ,GAAGe,UAAU,CAAC,CACZD,QAAQ,CAACM,QAAQ,CAAC,CACpB,CAAC,IAAI,CACHN,QAAQ,CAAC,QAAQ,CAAC,CACpB,CACJ,CAAC,CAAE,CAACC,UAAU,CAAC,CAAC,CAEhB,GAAI,CAACA,UAAU,CAAE,CACf,mBAAOJ,IAAA,CAACN,QAAQ,EAACsB,EAAE,CAAC,QAAQ,CAACX,KAAK,CAAE,CAAEY,eAAe,CAAET,aAAc,CAAE,EAAG,CAC5E,CAEA,mBAAOR,IAAA,CAACH,UAAU,IAAG,CACvB,CAAC,CAED,cAAe,CAAAI,SAAS"},"metadata":{},"sourceType":"module","externalDependencies":[]}