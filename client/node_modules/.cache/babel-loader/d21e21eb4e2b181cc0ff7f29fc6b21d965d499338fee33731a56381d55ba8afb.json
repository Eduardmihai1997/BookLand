{"ast":null,"code":"// This function is being used for checking no items are empty in an object\nexport var checkObjectValues=function checkObjectValues(obj){for(var key in obj){if(obj.hasOwnProperty(key)){if(obj[key]===\"\"){return true;}}}return false;};// This function is made for checking signup credentails are valid before signing up.\nexport var validateEmailAndPassword=function validateEmailAndPassword(email,password,confirmPassword){// check if email is in correct format\nif(!/\\S+@\\S+\\.\\S+/.test(email)){return{status:\"error\",message:\"Invalid email format.\"};}// check if password is not empty\nif(password.trim()===\"\"){return{status:\"error\",message:\"Password cannot be empty.\"};}// check if password matches confirm password\nif(password!==confirmPassword){return{status:\"error\",message:\"Password and confirm password do not match.\"};}// return OK status if all checks pass\nreturn{status:\"ok\"};};","map":{"version":3,"names":["checkObjectValues","obj","key","hasOwnProperty","validateEmailAndPassword","email","password","confirmPassword","test","status","message","trim"],"sources":["C:/Users/User/Desktop/Book Land/client/src/utils/vaildations.js"],"sourcesContent":["\n// This function is being used for checking no items are empty in an object\nexport const checkObjectValues = (obj) => {\n  for (const key in obj) {\n    if (obj.hasOwnProperty(key)) {\n      if (obj[key] === \"\") {\n        return true;\n      }\n    }\n  }\n  return false;\n};\n\n\n\n// This function is made for checking signup credentails are valid before signing up.\nexport const validateEmailAndPassword = (email, password, confirmPassword) => {\n  // check if email is in correct format\n  if (!/\\S+@\\S+\\.\\S+/.test(email)) {\n    return { status: \"error\", message: \"Invalid email format.\" };\n  }\n\n  // check if password is not empty\n  if (password.trim() === \"\") {\n    return { status: \"error\", message: \"Password cannot be empty.\" };\n  }\n\n  // check if password matches confirm password\n  if (password !== confirmPassword) {\n    return { status: \"error\", message: \"Password and confirm password do not match.\" };\n  }\n\n  // return OK status if all checks pass\n  return { status: \"ok\" };\n}\n"],"mappings":"AACA;AACA,MAAO,IAAM,CAAAA,iBAAiB,CAAG,QAApB,CAAAA,iBAAiBA,CAAIC,GAAG,CAAK,CACxC,IAAK,GAAM,CAAAC,GAAG,GAAI,CAAAD,GAAG,CAAE,CACrB,GAAIA,GAAG,CAACE,cAAc,CAACD,GAAG,CAAC,CAAE,CAC3B,GAAID,GAAG,CAACC,GAAG,CAAC,GAAK,EAAE,CAAE,CACnB,MAAO,KAAI,CACb,CACF,CACF,CACA,MAAO,MAAK,CACd,CAAC,CAID;AACA,MAAO,IAAM,CAAAE,wBAAwB,CAAG,QAA3B,CAAAA,wBAAwBA,CAAIC,KAAK,CAAEC,QAAQ,CAAEC,eAAe,CAAK,CAC5E;AACA,GAAI,CAAC,cAAc,CAACC,IAAI,CAACH,KAAK,CAAC,CAAE,CAC/B,MAAO,CAAEI,MAAM,CAAE,OAAO,CAAEC,OAAO,CAAE,uBAAwB,CAAC,CAC9D,CAEA;AACA,GAAIJ,QAAQ,CAACK,IAAI,EAAE,GAAK,EAAE,CAAE,CAC1B,MAAO,CAAEF,MAAM,CAAE,OAAO,CAAEC,OAAO,CAAE,2BAA4B,CAAC,CAClE,CAEA;AACA,GAAIJ,QAAQ,GAAKC,eAAe,CAAE,CAChC,MAAO,CAAEE,MAAM,CAAE,OAAO,CAAEC,OAAO,CAAE,6CAA8C,CAAC,CACpF,CAEA;AACA,MAAO,CAAED,MAAM,CAAE,IAAK,CAAC,CACzB,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}